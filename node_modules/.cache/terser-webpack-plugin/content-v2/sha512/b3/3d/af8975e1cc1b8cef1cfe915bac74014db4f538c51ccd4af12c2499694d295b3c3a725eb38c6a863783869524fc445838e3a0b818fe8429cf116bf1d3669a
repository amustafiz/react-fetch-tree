{"map":"{\"version\":3,\"sources\":[\"/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/node_modules/typescript/lib sync\",\"/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/src/index.js\",\"/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/src/fakeApi.js\"],\"names\":[\"webpackEmptyContext\",\"req\",\"e\",\"Error\",\"code\",\"keys\",\"resolve\",\"module\",\"exports\",\"id\",\"Fetchtree\",\"react_default\",\"a\",\"createElement\",\"style\",\"width\",\"height\",\"lib_default\",\"data\",\"orgChart\",\"orientation\",\"ProfilePage\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"user\",\"setUser\",\"_useState3\",\"_useState4\",\"character\",\"setCharacter\",\"useEffect\",\"fetch\",\"concat\",\"then\",\"response\",\"json\",\"name\",\"fetchUser\",\"u\",\"ProfileTimeline\",\"onClick\",\"props\",\"_useState5\",\"_useState6\",\"posts\",\"setPosts\",\"starships\",\"fetchPosts\",\"p\",\"length\",\"map\",\"post\",\"idx\",\"key\",\"console\",\"log\",\"rootElement\",\"document\",\"getElementById\",\"render\",\"fiberwalker\",\"node\",\"treedata\",\"children\",\"child\",\"sibling\",\"push\",\"elementType\",\"__ReactSightFiberDOM\",\"devTools\",\"window\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"original\",\"onCommitFiberRoot\",\"args\",\"current\"],\"mappings\":\"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\",\"sourcesContent\":[\"function webpackEmptyContext(req) {\\n\\tvar e = new Error(\\\"Cannot find module '\\\" + req + \\\"'\\\");\\n\\te.code = 'MODULE_NOT_FOUND';\\n\\tthrow e;\\n}\\nwebpackEmptyContext.keys = function() { return []; };\\nwebpackEmptyContext.resolve = webpackEmptyContext;\\nmodule.exports = webpackEmptyContext;\\nwebpackEmptyContext.id = 271;\",\"import React, { useState, useEffect } from \\\"react\\\";\\nimport ReactDOM, { render } from \\\"react-dom\\\";\\nimport { fetchUser, fetchPosts } from \\\"./fakeApi\\\";\\nimport { findNodeByComponentName, Utils } from \\\"react-fiber-traverse\\\";\\nimport Tree from \\\"react-d3-tree\\\";\\nimport { isConstructorDeclaration } from \\\"typescript\\\";\\n\\nconsole.log(\\\"ran\\\");\\nfunction Fetchtree() {\\n  return (\\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\\n    <div id=\\\"treeWrapper\\\" style={{ width: \\\"80vw\\\", height: \\\"20vh\\\" }}>\\n      <Tree data={orgChart} orientation={\\\"vertical\\\"} />\\n    </div>\\n  );\\n}\\n\\nfunction ProfilePage() {\\n  const [user, setUser] = useState(null);\\n  const [character, setCharacter] = useState(1);\\n\\n  useEffect(() => {\\n    fetchUser(character).then((u) => setUser(u));\\n  }, [character]);\\n\\n  if (user === null) {\\n    return <p>Loading profile...</p>;\\n  }\\n  return (\\n    <div>\\n      <h1>{user}</h1>\\n      <ProfileTimeline user={user} character={character} />\\n      <button onClick={() => setCharacter(character + 1)}>\\n        Change Character\\n      </button>\\n    </div>\\n  );\\n}\\n\\nfunction ProfileTimeline(props) {\\n  const [posts, setPosts] = useState(null);\\n\\n  useEffect(() => {\\n    fetchPosts(props.character).then((p) => setPosts(p));\\n  }, [props.character]);\\n\\n  if (posts === null) {\\n    return <h2>Loading posts...</h2>;\\n  }\\n  return (\\n    <div>\\n      {posts.length === 1 ? (\\n        <h5>\\n          {props.user} has been seen on {posts.length} starship\\n        </h5>\\n      ) : (\\n        <h5>\\n          {props.user} has been seen on {posts.length} starships\\n        </h5>\\n      )}\\n      <ul>\\n        {posts.map((post, idx) => (\\n          <li key={idx}>{post}</li>\\n        ))}\\n      </ul>\\n      <Fetchtree />\\n    </div>\\n  );\\n}\\n\\nconst rootElement = document.getElementById(\\\"root\\\");\\nrender(<ProfilePage />, rootElement);\\n\\n// console.log(rootElement);\\n\\n// let fiberDOM = rootElement._reactRootContainer._internalRoot;\\n// console.log(\\\"fiberDOM\\\", fiberDOM);\\n\\n// let treedata = { name: \\\"App\\\", children: [] };\\n//console.log(\\\"sibling\\\", fiberDOM.current.child.child.sibling);\\n\\nconst fiberwalker = (node, treedata = { name: \\\"App\\\", children: [] }) => {\\n  //console.log(\\\"fiberwalker node\\\", node);\\n  if (node.child.sibling) {\\n    treedata.children.push({\\n      name: node.child.sibling.elementType.name,\\n      children: [],\\n    });\\n    //console.log(\\\"siblingtree\\\", treedata);\\n    if (node.child.sibling.child != null)\\n      fiberwalker(node.child.sibling, treedata);\\n  }\\n  if (node.child) {\\n    node = node.child;\\n\\n    if (node.elementType.name) {\\n      //&& node.elementType.name !== \\\"Fetchtree\\\"\\n      treedata.children.push({ name: node.elementType.name, children: [] });\\n    }\\n    //console.log(\\\"childtree\\\", treedata);\\n    if (node.child != null) {\\n      fiberwalker(node, treedata.children[treedata.children.length]);\\n    }\\n  }\\n  return treedata;\\n};\\n\\nlet orgChart;\\n\\n// function onCommitFiberRoot(rendererID, root, priorityLevel) {\\n//   const mountedRoots = hook.getFiberRoots(rendererID);\\n//   const current = root.current;\\n//   const isKnownRoot = mountedRoots.has(root);\\n//   const isUnmounting =\\n//     current.memoizedState == null || current.memoizedState.element == null; // Keep track of mounted roots so we can hydrate when DevTools connect.\\n\\n//   if (!isKnownRoot && !isUnmounting) {\\n//     mountedRoots.add(root);\\n//   } else if (isKnownRoot && isUnmounting) {\\n//     mountedRoots.delete(root);\\n//   }\\n\\n//   const rendererInterface = rendererInterfaces.get(rendererID);\\n\\n//   if (rendererInterface != null) {\\n//     rendererInterface.handleCommitFiberRoot(root, priorityLevel);\\n//   }\\n// }\\nlet __ReactSightFiberDOM;\\nconst devTools = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\\n\\n// if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__)\\n//   console.warn(\\n//     \\\"[React-Sight]: React Sight requires React Dev Tools to be installed.\\\"\\n//   );\\n// const reactInstances = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers || null;\\n// const instance = reactInstances.get(1);\\n//\\n// (function installHook() {\\n//   // no instance of React detected\\n//   if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\\n//     console.log(\\n//       \\\"Error: React DevTools not present. React Sight uses React DevTools to patch React's reconciler\\\"\\n//     );\\n//     return;\\n//   }\\n//   // React fiber (16+)\\n//   if (instance && instance.version) {\\ndevTools.onCommitFiberRoot = (function (original) {\\n  return function (...args) {\\n    __ReactSightFiberDOM = args[1];\\n    console.log(\\\"dom: \\\", __ReactSightFiberDOM.current);\\n    orgChart = fiberwalker(__ReactSightFiberDOM.current);\\n    console.log(\\\"orgChart: \\\", orgChart);\\n    return original(...args);\\n  };\\n})(devTools.onCommitFiberRoot);\\n\\n//   }\\n// })();\\n//---------------------------------------\\n//REACT SIGHT RECURSIVE TREE PARSER\\n// let __ReactSightStore = [];\\n// const components = [];\\n\\n// const parseFunction = (fn) => {\\n//   const string = `${fn}`;\\n\\n//   const match = string.match(/function/);\\n//   if (match == null) return \\\"fn()\\\";\\n\\n//   const firstIndex = match[0]\\n//     ? string.indexOf(match[0]) + match[0].length + 1\\n//     : null;\\n//   if (firstIndex == null) return \\\"fn()\\\";\\n\\n//   const lastIndex = string.indexOf(\\\"(\\\");\\n//   const fnName = string.slice(firstIndex, lastIndex);\\n//   if (!fnName.length) return \\\"fn()\\\";\\n//   return `${fnName} ()`;\\n// };\\n\\n// const props16 = (node) => {\\n//   try {\\n//     const props = {};\\n//     const keys = Object.keys(node.memoizedProps);\\n\\n//     keys.forEach((prop) => {\\n//       const value = node.memoizedProps[prop];\\n//       if (typeof value === \\\"function\\\") props[prop] = parseFunction(value);\\n//       // TODO - get these objects to work, almost always children property\\n//       else if (typeof node.memoizedProps[prop] === \\\"object\\\") {\\n//         // console.log(\\\"PROP Object: \\\", node.memoizedProps[prop]);\\n//         props[prop] = \\\"object*\\\";\\n\\n//         // TODO - parse object\\n//       } else props[prop] = node.memoizedProps[prop];\\n//     });\\n//     return props;\\n//   } catch (e) {\\n//     return {};\\n//   }\\n// };\\n\\n// const recur16 = (node, parentArr) => {\\n//   console.log(\\\"node\\\", node);\\n//   const newComponent = {\\n//     name: \\\"\\\",\\n//     children: [],\\n//     state: null,\\n//     props: null,\\n//     id: null,\\n//     isDOM: null,\\n//   };\\n\\n//   // TODO ** only works on local host **\\n//   // get ID\\n//   if (node._debugID) newComponent.id = node._debugID;\\n\\n//   // get name and type\\n//   if (node.type) {\\n//     if (node.type.name) {\\n//       newComponent.name = node.type.name;\\n//       newComponent.isDOM = false;\\n//     } else {\\n//       newComponent.name = node.type;\\n//       newComponent.isDOM = true;\\n//     }\\n//   }\\n\\n//   // get state\\n//   if (node.memoizedState) newComponent.state = node.memoizedState;\\n\\n//   // get props\\n//   if (node.memoizedProps) newComponent.props = props16(node);\\n\\n//   // get store\\n//   if (node.type && node.type.propTypes) {\\n//     if (node.type.propTypes.hasOwnProperty(\\\"store\\\")) {\\n//       // TODO replace with safety check\\n//       try {\\n//         __ReactSightStore = node.stateNode.store.getState();\\n//       } catch (e) {\\n//         // noop\\n//         // console.log('Error getting store: ', e);\\n//       }\\n//     }\\n//   }\\n\\n//   newComponent.children = [];\\n//   parentArr.push(newComponent);\\n//\\n// };\\n\\n// const traverse16 = (fiberDOM) => {\\n//   recur16(fiberDOM.current.stateNode.current, components);\\n//   return components;\\n// };\\n\\n// console.log(\\\"recur\\\", traverse16(fiberDOM));\\n\\n//----------------------------------------------------\\n\\n// let hostRootFiberNode = fiberRoot.current;\\n// let hostRootFiberNodeSibling = fiberRoot.current;\\n// let hostRootFiberNodeChild = fiberRoot.current;\\n// console.log('initial hostRoot', hostRootFiberNode);\\n\\n// //first child of hostRoot is ProfilePage\\n// let profilePageRoot = hostRootFiberNode.child;\\n// console.log('profilePageRoot', profilePageRoot);\\n\\n// while (hostRootFiberNodeSibling) {\\n//   hostRootFiberNodeSibling = hostRootFiberNodeSibling.sibling;\\n//   console.log('hostroot in sibling loop', hostRootFiberNodeSibling);\\n// }\\n\\n// while (hostRootFiberNodeChild) {\\n//   hostRootFiberNodeChild = hostRootFiberNodeChild.child;\\n//   console.log('hostroot in child loop', hostRootFiberNodeChild);\\n// }\\n\\n// ReactDOM.createRoot(rootElement).render(\\n//   <ProfilePage />\\n// );\\n\",\"export function fetchUser(id) {\\n  // console.log(\\\"fetch user...\\\");\\n\\n  return fetch(`https://swapi.dev/api/people/${id}/`)\\n    .then((response) => response.json())\\n    .then((data) => {\\n      const { name } = data;\\n      return name;\\n    });\\n}\\n\\nexport function fetchPosts(id) {\\n  // console.log(\\\"fetch posts...\\\");\\n  return fetch(`https://swapi.dev/api/people/${id}/`)\\n    .then((response) => response.json())\\n    .then((data) => {\\n      const { starships } = data;\\n      return starships;\\n    });\\n  // return new Promise(resolve => {\\n  //   setTimeout(() => {\\n  //     console.log(\\\"fetched posts\\\");\\n  //     resolve([\\n  //       {\\n  //         id: 0,\\n  //         text:\\n  //           \\\"I get by with a little help from my friends\\\"\\n  //       },\\n  //       {\\n  //         id: 1,\\n  //         text:\\n  //           \\\"I'd like to be under the sea in an octupus's garden\\\"\\n  //       },\\n  //       {\\n  //         id: 2,\\n  //         text:\\n  //           \\\"You got that sand all over your feet\\\"\\n  //       }\\n  //     ]);\\n  //   }, 2000);\\n  // });\\n}\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{135:function(e,n,t){e.exports=t(276)},166:function(e,n){},167:function(e,n){},168:function(e,n){},171:function(e,n){},173:function(e,n){},184:function(e,n){},186:function(e,n){},213:function(e,n){},215:function(e,n){},216:function(e,n){},221:function(e,n){},223:function(e,n){},242:function(e,n){},254:function(e,n){},257:function(e,n){},271:function(e,n){function t(e){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id=271},276:function(e,n,t){\"use strict\";t.r(n);var c=t(46),l=t(2),o=t.n(l),a=t(70);t(140);var r=t(131),i=t.n(r);t(165);function u(){return o.a.createElement(\"div\",{id:\"treeWrapper\",style:{width:\"80vw\",height:\"20vh\"}},o.a.createElement(i.a,{data:m,orientation:\"vertical\"}))}function h(){const e=Object(l.useState)(null),n=Object(c.a)(e,2),t=n[0],a=n[1],r=Object(l.useState)(1),i=Object(c.a)(r,2),u=i[0],h=i[1];return Object(l.useEffect)(()=>{(function(e){return fetch(\"https://swapi.dev/api/people/\".concat(e,\"/\")).then(e=>e.json()).then(e=>e.name)})(u).then(e=>a(e))},[u]),null===t?o.a.createElement(\"p\",null,\"Loading profile...\"):o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,t),o.a.createElement(s,{user:t,character:u}),o.a.createElement(\"button\",{onClick:()=>h(u+1)},\"Change Character\"))}function s(e){const n=Object(l.useState)(null),t=Object(c.a)(n,2),a=t[0],r=t[1];return Object(l.useEffect)(()=>{(function(e){return fetch(\"https://swapi.dev/api/people/\".concat(e,\"/\")).then(e=>e.json()).then(e=>e.starships)})(e.character).then(e=>r(e))},[e.character]),null===a?o.a.createElement(\"h2\",null,\"Loading posts...\"):o.a.createElement(\"div\",null,1===a.length?o.a.createElement(\"h5\",null,e.user,\" has been seen on \",a.length,\" starship\"):o.a.createElement(\"h5\",null,e.user,\" has been seen on \",a.length,\" starships\"),o.a.createElement(\"ul\",null,a.map((e,n)=>o.a.createElement(\"li\",{key:n},e))),o.a.createElement(u,null))}console.log(\"ran\");const d=document.getElementById(\"root\");Object(a.render)(o.a.createElement(h,null),d);const f=(e,n={name:\"App\",children:[]})=>(e.child.sibling&&(n.children.push({name:e.child.sibling.elementType.name,children:[]}),null!=e.child.sibling.child&&f(e.child.sibling,n)),e.child&&((e=e.child).elementType.name&&n.children.push({name:e.elementType.name,children:[]}),null!=e.child&&f(e,n.children[n.children.length])),n);let m,p;const E=window.__REACT_DEVTOOLS_GLOBAL_HOOK__;var b;E.onCommitFiberRoot=(b=E.onCommitFiberRoot,function(...e){return p=e[1],console.log(\"dom: \",p.current),m=f(p.current),console.log(\"orgChart: \",m),b(...e)})}},[[135,1,2]]]);","extractedComments":[]}