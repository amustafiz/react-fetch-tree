{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport { fetchUser, fetchPosts } from \"./fakeApi\";\nimport { findNodeByComponentName, Utils } from \"react-fiber-traverse\";\nimport Tree from \"react-d3-tree\";\nimport { isConstructorDeclaration } from \"typescript\";\nconsole.log(\"ran\");\n\nfunction Fetchtree() {\n  return (\n    /*#__PURE__*/\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\n    React.createElement(\"div\", {\n      id: \"treeWrapper\",\n      style: {\n        width: \"80vw\",\n        height: \"20vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tree, {\n      data: orgChart,\n      orientation: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nfunction ProfilePage() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        character = _useState4[0],\n        setCharacter = _useState4[1];\n\n  useEffect(() => {\n    fetchUser(character).then(u => setUser(u));\n  }, [character]);\n\n  if (user === null) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Loading profile...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, user), /*#__PURE__*/React.createElement(ProfileTimeline, {\n    user: user,\n    character: character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCharacter(character + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Change Character\"));\n}\n\nfunction ProfileTimeline(props) {\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        posts = _useState6[0],\n        setPosts = _useState6[1];\n\n  useEffect(() => {\n    fetchPosts(props.character).then(p => setPosts(p));\n  }, [props.character]);\n\n  if (posts === null) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"Loading posts...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, posts.length === 1 ? /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.user, \" has been seen on \", posts.length, \" starship\") : /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, props.user, \" has been seen on \", posts.length, \" starships\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, posts.map((post, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, post))), /*#__PURE__*/React.createElement(Fetchtree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender( /*#__PURE__*/React.createElement(ProfilePage, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 8\n  }\n}), rootElement); // console.log(rootElement);\n// let fiberDOM = rootElement._reactRootContainer._internalRoot;\n// console.log(\"fiberDOM\", fiberDOM);\n// let treedata = { name: \"App\", children: [] };\n//console.log(\"sibling\", fiberDOM.current.child.child.sibling);\n\nconst fiberwalker = (node, treedata = {\n  name: \"App\",\n  children: []\n}) => {\n  //console.log(\"fiberwalker node\", node);\n  if (node.child.sibling) {\n    treedata.children.push({\n      name: node.child.sibling.elementType.name,\n      children: []\n    }); //console.log(\"siblingtree\", treedata);\n\n    if (node.child.sibling.child != null) fiberwalker(node.child.sibling, treedata);\n  }\n\n  if (node.child) {\n    node = node.child;\n\n    if (node.elementType.name) {\n      //&& node.elementType.name !== \"Fetchtree\"\n      treedata.children.push({\n        name: node.elementType.name,\n        children: []\n      });\n    } //console.log(\"childtree\", treedata);\n\n\n    if (node.child != null) {\n      fiberwalker(node, treedata.children[treedata.children.length]);\n    }\n  }\n\n  return treedata;\n};\n\nlet orgChart; // function onCommitFiberRoot(rendererID, root, priorityLevel) {\n//   const mountedRoots = hook.getFiberRoots(rendererID);\n//   const current = root.current;\n//   const isKnownRoot = mountedRoots.has(root);\n//   const isUnmounting =\n//     current.memoizedState == null || current.memoizedState.element == null; // Keep track of mounted roots so we can hydrate when DevTools connect.\n//   if (!isKnownRoot && !isUnmounting) {\n//     mountedRoots.add(root);\n//   } else if (isKnownRoot && isUnmounting) {\n//     mountedRoots.delete(root);\n//   }\n//   const rendererInterface = rendererInterfaces.get(rendererID);\n//   if (rendererInterface != null) {\n//     rendererInterface.handleCommitFiberRoot(root, priorityLevel);\n//   }\n// }\n\nlet __ReactSightFiberDOM;\n\nconst devTools = window.__REACT_DEVTOOLS_GLOBAL_HOOK__; // if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__)\n//   console.warn(\n//     \"[React-Sight]: React Sight requires React Dev Tools to be installed.\"\n//   );\n// const reactInstances = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers || null;\n// const instance = reactInstances.get(1);\n//\n// (function installHook() {\n//   // no instance of React detected\n//   if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n//     console.log(\n//       \"Error: React DevTools not present. React Sight uses React DevTools to patch React's reconciler\"\n//     );\n//     return;\n//   }\n//   // React fiber (16+)\n//   if (instance && instance.version) {\n\ndevTools.onCommitFiberRoot = function (original) {\n  return function (...args) {\n    __ReactSightFiberDOM = args[1];\n    console.log(\"dom: \", __ReactSightFiberDOM.current);\n    orgChart = fiberwalker(__ReactSightFiberDOM.current);\n    console.log(\"orgChart: \", orgChart);\n    return original(...args);\n  };\n}(devTools.onCommitFiberRoot); //   }\n// })();\n//---------------------------------------\n//REACT SIGHT RECURSIVE TREE PARSER\n// let __ReactSightStore = [];\n// const components = [];\n// const parseFunction = (fn) => {\n//   const string = `${fn}`;\n//   const match = string.match(/function/);\n//   if (match == null) return \"fn()\";\n//   const firstIndex = match[0]\n//     ? string.indexOf(match[0]) + match[0].length + 1\n//     : null;\n//   if (firstIndex == null) return \"fn()\";\n//   const lastIndex = string.indexOf(\"(\");\n//   const fnName = string.slice(firstIndex, lastIndex);\n//   if (!fnName.length) return \"fn()\";\n//   return `${fnName} ()`;\n// };\n// const props16 = (node) => {\n//   try {\n//     const props = {};\n//     const keys = Object.keys(node.memoizedProps);\n//     keys.forEach((prop) => {\n//       const value = node.memoizedProps[prop];\n//       if (typeof value === \"function\") props[prop] = parseFunction(value);\n//       // TODO - get these objects to work, almost always children property\n//       else if (typeof node.memoizedProps[prop] === \"object\") {\n//         // console.log(\"PROP Object: \", node.memoizedProps[prop]);\n//         props[prop] = \"object*\";\n//         // TODO - parse object\n//       } else props[prop] = node.memoizedProps[prop];\n//     });\n//     return props;\n//   } catch (e) {\n//     return {};\n//   }\n// };\n// const recur16 = (node, parentArr) => {\n//   console.log(\"node\", node);\n//   const newComponent = {\n//     name: \"\",\n//     children: [],\n//     state: null,\n//     props: null,\n//     id: null,\n//     isDOM: null,\n//   };\n//   // TODO ** only works on local host **\n//   // get ID\n//   if (node._debugID) newComponent.id = node._debugID;\n//   // get name and type\n//   if (node.type) {\n//     if (node.type.name) {\n//       newComponent.name = node.type.name;\n//       newComponent.isDOM = false;\n//     } else {\n//       newComponent.name = node.type;\n//       newComponent.isDOM = true;\n//     }\n//   }\n//   // get state\n//   if (node.memoizedState) newComponent.state = node.memoizedState;\n//   // get props\n//   if (node.memoizedProps) newComponent.props = props16(node);\n//   // get store\n//   if (node.type && node.type.propTypes) {\n//     if (node.type.propTypes.hasOwnProperty(\"store\")) {\n//       // TODO replace with safety check\n//       try {\n//         __ReactSightStore = node.stateNode.store.getState();\n//       } catch (e) {\n//         // noop\n//         // console.log('Error getting store: ', e);\n//       }\n//     }\n//   }\n//   newComponent.children = [];\n//   parentArr.push(newComponent);\n//\n// };\n// const traverse16 = (fiberDOM) => {\n//   recur16(fiberDOM.current.stateNode.current, components);\n//   return components;\n// };\n// console.log(\"recur\", traverse16(fiberDOM));\n//----------------------------------------------------\n// let hostRootFiberNode = fiberRoot.current;\n// let hostRootFiberNodeSibling = fiberRoot.current;\n// let hostRootFiberNodeChild = fiberRoot.current;\n// console.log('initial hostRoot', hostRootFiberNode);\n// //first child of hostRoot is ProfilePage\n// let profilePageRoot = hostRootFiberNode.child;\n// console.log('profilePageRoot', profilePageRoot);\n// while (hostRootFiberNodeSibling) {\n//   hostRootFiberNodeSibling = hostRootFiberNodeSibling.sibling;\n//   console.log('hostroot in sibling loop', hostRootFiberNodeSibling);\n// }\n// while (hostRootFiberNodeChild) {\n//   hostRootFiberNodeChild = hostRootFiberNodeChild.child;\n//   console.log('hostroot in child loop', hostRootFiberNodeChild);\n// }\n// ReactDOM.createRoot(rootElement).render(\n//   <ProfilePage />\n// );","map":{"version":3,"sources":["/Users/admin/Desktop/PTRI/Coursework/prodproject/react-fetch-tree/src/index.js"],"names":["React","useState","useEffect","ReactDOM","render","fetchUser","fetchPosts","findNodeByComponentName","Utils","Tree","isConstructorDeclaration","console","log","Fetchtree","width","height","orgChart","ProfilePage","user","setUser","character","setCharacter","then","u","ProfileTimeline","props","posts","setPosts","p","length","map","post","idx","rootElement","document","getElementById","fiberwalker","node","treedata","name","children","child","sibling","push","elementType","__ReactSightFiberDOM","devTools","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","onCommitFiberRoot","original","args","current"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport { fetchUser, fetchPosts } from \"./fakeApi\";\nimport { findNodeByComponentName, Utils } from \"react-fiber-traverse\";\nimport Tree from \"react-d3-tree\";\nimport { isConstructorDeclaration } from \"typescript\";\n\nconsole.log(\"ran\");\nfunction Fetchtree() {\n  return (\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\n    <div id=\"treeWrapper\" style={{ width: \"80vw\", height: \"20vh\" }}>\n      <Tree data={orgChart} orientation={\"vertical\"} />\n    </div>\n  );\n}\n\nfunction ProfilePage() {\n  const [user, setUser] = useState(null);\n  const [character, setCharacter] = useState(1);\n\n  useEffect(() => {\n    fetchUser(character).then((u) => setUser(u));\n  }, [character]);\n\n  if (user === null) {\n    return <p>Loading profile...</p>;\n  }\n  return (\n    <div>\n      <h1>{user}</h1>\n      <ProfileTimeline user={user} character={character} />\n      <button onClick={() => setCharacter(character + 1)}>\n        Change Character\n      </button>\n    </div>\n  );\n}\n\nfunction ProfileTimeline(props) {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    fetchPosts(props.character).then((p) => setPosts(p));\n  }, [props.character]);\n\n  if (posts === null) {\n    return <h2>Loading posts...</h2>;\n  }\n  return (\n    <div>\n      {posts.length === 1 ? (\n        <h5>\n          {props.user} has been seen on {posts.length} starship\n        </h5>\n      ) : (\n        <h5>\n          {props.user} has been seen on {posts.length} starships\n        </h5>\n      )}\n      <ul>\n        {posts.map((post, idx) => (\n          <li key={idx}>{post}</li>\n        ))}\n      </ul>\n      <Fetchtree />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<ProfilePage />, rootElement);\n\n// console.log(rootElement);\n\n// let fiberDOM = rootElement._reactRootContainer._internalRoot;\n// console.log(\"fiberDOM\", fiberDOM);\n\n// let treedata = { name: \"App\", children: [] };\n//console.log(\"sibling\", fiberDOM.current.child.child.sibling);\n\nconst fiberwalker = (node, treedata = { name: \"App\", children: [] }) => {\n  //console.log(\"fiberwalker node\", node);\n  if (node.child.sibling) {\n    treedata.children.push({\n      name: node.child.sibling.elementType.name,\n      children: [],\n    });\n    //console.log(\"siblingtree\", treedata);\n    if (node.child.sibling.child != null)\n      fiberwalker(node.child.sibling, treedata);\n  }\n  if (node.child) {\n    node = node.child;\n\n    if (node.elementType.name) {\n      //&& node.elementType.name !== \"Fetchtree\"\n      treedata.children.push({ name: node.elementType.name, children: [] });\n    }\n    //console.log(\"childtree\", treedata);\n    if (node.child != null) {\n      fiberwalker(node, treedata.children[treedata.children.length]);\n    }\n  }\n  return treedata;\n};\n\nlet orgChart;\n\n// function onCommitFiberRoot(rendererID, root, priorityLevel) {\n//   const mountedRoots = hook.getFiberRoots(rendererID);\n//   const current = root.current;\n//   const isKnownRoot = mountedRoots.has(root);\n//   const isUnmounting =\n//     current.memoizedState == null || current.memoizedState.element == null; // Keep track of mounted roots so we can hydrate when DevTools connect.\n\n//   if (!isKnownRoot && !isUnmounting) {\n//     mountedRoots.add(root);\n//   } else if (isKnownRoot && isUnmounting) {\n//     mountedRoots.delete(root);\n//   }\n\n//   const rendererInterface = rendererInterfaces.get(rendererID);\n\n//   if (rendererInterface != null) {\n//     rendererInterface.handleCommitFiberRoot(root, priorityLevel);\n//   }\n// }\nlet __ReactSightFiberDOM;\nconst devTools = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n// if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__)\n//   console.warn(\n//     \"[React-Sight]: React Sight requires React Dev Tools to be installed.\"\n//   );\n// const reactInstances = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers || null;\n// const instance = reactInstances.get(1);\n//\n// (function installHook() {\n//   // no instance of React detected\n//   if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\n//     console.log(\n//       \"Error: React DevTools not present. React Sight uses React DevTools to patch React's reconciler\"\n//     );\n//     return;\n//   }\n//   // React fiber (16+)\n//   if (instance && instance.version) {\ndevTools.onCommitFiberRoot = (function (original) {\n  return function (...args) {\n    __ReactSightFiberDOM = args[1];\n    console.log(\"dom: \", __ReactSightFiberDOM.current);\n    orgChart = fiberwalker(__ReactSightFiberDOM.current);\n    console.log(\"orgChart: \", orgChart);\n    return original(...args);\n  };\n})(devTools.onCommitFiberRoot);\n\n//   }\n// })();\n//---------------------------------------\n//REACT SIGHT RECURSIVE TREE PARSER\n// let __ReactSightStore = [];\n// const components = [];\n\n// const parseFunction = (fn) => {\n//   const string = `${fn}`;\n\n//   const match = string.match(/function/);\n//   if (match == null) return \"fn()\";\n\n//   const firstIndex = match[0]\n//     ? string.indexOf(match[0]) + match[0].length + 1\n//     : null;\n//   if (firstIndex == null) return \"fn()\";\n\n//   const lastIndex = string.indexOf(\"(\");\n//   const fnName = string.slice(firstIndex, lastIndex);\n//   if (!fnName.length) return \"fn()\";\n//   return `${fnName} ()`;\n// };\n\n// const props16 = (node) => {\n//   try {\n//     const props = {};\n//     const keys = Object.keys(node.memoizedProps);\n\n//     keys.forEach((prop) => {\n//       const value = node.memoizedProps[prop];\n//       if (typeof value === \"function\") props[prop] = parseFunction(value);\n//       // TODO - get these objects to work, almost always children property\n//       else if (typeof node.memoizedProps[prop] === \"object\") {\n//         // console.log(\"PROP Object: \", node.memoizedProps[prop]);\n//         props[prop] = \"object*\";\n\n//         // TODO - parse object\n//       } else props[prop] = node.memoizedProps[prop];\n//     });\n//     return props;\n//   } catch (e) {\n//     return {};\n//   }\n// };\n\n// const recur16 = (node, parentArr) => {\n//   console.log(\"node\", node);\n//   const newComponent = {\n//     name: \"\",\n//     children: [],\n//     state: null,\n//     props: null,\n//     id: null,\n//     isDOM: null,\n//   };\n\n//   // TODO ** only works on local host **\n//   // get ID\n//   if (node._debugID) newComponent.id = node._debugID;\n\n//   // get name and type\n//   if (node.type) {\n//     if (node.type.name) {\n//       newComponent.name = node.type.name;\n//       newComponent.isDOM = false;\n//     } else {\n//       newComponent.name = node.type;\n//       newComponent.isDOM = true;\n//     }\n//   }\n\n//   // get state\n//   if (node.memoizedState) newComponent.state = node.memoizedState;\n\n//   // get props\n//   if (node.memoizedProps) newComponent.props = props16(node);\n\n//   // get store\n//   if (node.type && node.type.propTypes) {\n//     if (node.type.propTypes.hasOwnProperty(\"store\")) {\n//       // TODO replace with safety check\n//       try {\n//         __ReactSightStore = node.stateNode.store.getState();\n//       } catch (e) {\n//         // noop\n//         // console.log('Error getting store: ', e);\n//       }\n//     }\n//   }\n\n//   newComponent.children = [];\n//   parentArr.push(newComponent);\n//\n// };\n\n// const traverse16 = (fiberDOM) => {\n//   recur16(fiberDOM.current.stateNode.current, components);\n//   return components;\n// };\n\n// console.log(\"recur\", traverse16(fiberDOM));\n\n//----------------------------------------------------\n\n// let hostRootFiberNode = fiberRoot.current;\n// let hostRootFiberNodeSibling = fiberRoot.current;\n// let hostRootFiberNodeChild = fiberRoot.current;\n// console.log('initial hostRoot', hostRootFiberNode);\n\n// //first child of hostRoot is ProfilePage\n// let profilePageRoot = hostRootFiberNode.child;\n// console.log('profilePageRoot', profilePageRoot);\n\n// while (hostRootFiberNodeSibling) {\n//   hostRootFiberNodeSibling = hostRootFiberNodeSibling.sibling;\n//   console.log('hostroot in sibling loop', hostRootFiberNodeSibling);\n// }\n\n// while (hostRootFiberNodeChild) {\n//   hostRootFiberNodeChild = hostRootFiberNodeChild.child;\n//   console.log('hostroot in child loop', hostRootFiberNodeChild);\n// }\n\n// ReactDOM.createRoot(rootElement).render(\n//   <ProfilePage />\n// );\n"]},"metadata":{},"sourceType":"module"}