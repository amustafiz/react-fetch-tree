{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar DefaultNodeElement_1 = __importDefault(require(\"./DefaultNodeElement\"));\n\nvar Node =\n/** @class */\nfunction (_super) {\n  __extends(Node, _super);\n\n  function Node() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.nodeRef = null;\n    _this.state = {\n      transform: _this.setTransform(_this.props.position, _this.props.parent, _this.props.orientation, true),\n      initialStyle: {\n        opacity: 0\n      }\n    };\n\n    _this.shouldNodeTransform = function (ownProps, nextProps) {\n      return nextProps.subscriptions !== ownProps.subscriptions || nextProps.position.x !== ownProps.position.x || nextProps.position.y !== ownProps.position.y || nextProps.orientation !== ownProps.orientation;\n    }; // TODO: needs tests\n\n\n    _this.renderNodeElement = function () {\n      var _a = _this.props,\n          data = _a.data,\n          renderCustomNodeElement = _a.renderCustomNodeElement;\n\n      if (typeof renderCustomNodeElement === 'function') {\n        return renderCustomNodeElement({\n          nodeDatum: data,\n          toggleNode: _this.handleNodeToggle\n        });\n      }\n\n      return DefaultNodeElement_1.default({\n        nodeDatum: data,\n        toggleNode: _this.handleNodeToggle,\n        onNodeClick: _this.handleOnClick,\n        onNodeMouseOver: _this.handleOnMouseOver,\n        onNodeMouseOut: _this.handleOnMouseOut\n      });\n    };\n\n    _this.handleNodeToggle = function () {\n      return _this.props.onNodeToggle(_this.props.data.__rd3t.id);\n    };\n\n    _this.handleOnClick = function (evt) {\n      _this.props.onNodeClick(_this.props.data.__rd3t.id, evt);\n    };\n\n    _this.handleOnMouseOver = function (evt) {\n      _this.props.onNodeMouseOver(_this.props.data.__rd3t.id, evt);\n    };\n\n    _this.handleOnMouseOut = function (evt) {\n      _this.props.onNodeMouseOut(_this.props.data.__rd3t.id, evt);\n    };\n\n    return _this;\n  }\n\n  Node.prototype.componentDidMount = function () {\n    this.commitTransform();\n  };\n\n  Node.prototype.componentDidUpdate = function () {\n    this.commitTransform();\n  };\n\n  Node.prototype.shouldComponentUpdate = function (nextProps) {\n    return this.shouldNodeTransform(this.props, nextProps);\n  };\n\n  Node.prototype.setTransform = function (position, parent, orientation, shouldTranslateToOrigin) {\n    if (shouldTranslateToOrigin === void 0) {\n      shouldTranslateToOrigin = false;\n    }\n\n    if (shouldTranslateToOrigin) {\n      var hasParent = parent !== null && parent !== undefined;\n      var originX = hasParent ? parent.x : 0;\n      var originY = hasParent ? parent.y : 0;\n      return orientation === 'horizontal' ? \"translate(\" + originY + \",\" + originX + \")\" : \"translate(\" + originX + \",\" + originY + \")\";\n    }\n\n    return orientation === 'horizontal' ? \"translate(\" + position.y + \",\" + position.x + \")\" : \"translate(\" + position.x + \",\" + position.y + \")\";\n  };\n\n  Node.prototype.applyTransform = function (transform, transitionDuration, opacity, done) {\n    if (opacity === void 0) {\n      opacity = 1;\n    }\n\n    if (done === void 0) {\n      done = function done() {};\n    }\n\n    if (this.props.enableLegacyTransitions) {\n      d3_selection_1.select(this.nodeRef) // @ts-ignore\n      .transition().duration(transitionDuration).attr('transform', transform).style('opacity', opacity).on('end', done);\n    } else {\n      d3_selection_1.select(this.nodeRef).attr('transform', transform).style('opacity', opacity);\n      done();\n    }\n  };\n\n  Node.prototype.commitTransform = function () {\n    var _a = this.props,\n        orientation = _a.orientation,\n        transitionDuration = _a.transitionDuration,\n        position = _a.position,\n        parent = _a.parent;\n    var transform = this.setTransform(position, parent, orientation);\n    this.applyTransform(transform, transitionDuration);\n  };\n\n  Node.prototype.componentWillLeave = function (done) {\n    var _a = this.props,\n        orientation = _a.orientation,\n        transitionDuration = _a.transitionDuration,\n        position = _a.position,\n        parent = _a.parent;\n    var transform = this.setTransform(position, parent, orientation, true);\n    this.applyTransform(transform, transitionDuration, 0, done);\n  };\n\n  Node.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        data = _a.data,\n        nodeClassName = _a.nodeClassName;\n    return react_1.default.createElement(\"g\", {\n      id: data.__rd3t.id,\n      ref: function ref(n) {\n        _this.nodeRef = n;\n      },\n      style: this.state.initialStyle,\n      className: [data.children ? 'rd3t-node' : 'rd3t-leaf-node', nodeClassName].join(' ').trim(),\n      transform: this.state.transform\n    }, this.renderNodeElement());\n  };\n\n  return Node;\n}(react_1.default.Component);\n\nexports.default = Node;","map":null,"metadata":{},"sourceType":"script"}